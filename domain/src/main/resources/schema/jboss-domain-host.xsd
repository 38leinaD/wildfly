<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ JBoss, Home of Professional Open Source.
  ~ Copyright 2010, Red Hat, Inc., and individual contributors
  ~ as indicated by the @author tags. See the copyright.txt file in the
  ~ distribution for a full listing of individual contributors.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
            targetNamespace="urn:jboss:domain:1.0"
            xmlns="urn:jboss:domain:1.0"
            elementFormDefault="qualified"
            attributeFormDefault="unqualified"
            version="1.0">

  <!-- Include the common definitions -->
  <xs:include schemaLocation="jboss-domain-common.xsd" />

    <xs:element name="host" type="host-configType"/>

    <xs:complexType name="host-configType">
        <xs:sequence>
            <xs:element name="extensions" type="extensionsType" minOccurs="0"/>
            <xs:element name="system-properties" type="propertiesWithOptionalValueType" minOccurs="0"/>
            <xs:element name="domain-controller" type="domain-controllerType" minOccurs="1"/>
            <xs:element name="interfaces" type="specified-interfacesType" minOccurs="0"/>
            <xs:element name="jvms" type="jvmsType" minOccurs="0"/>
            <xs:element name="servers" type="serversType" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="domain-controllerType">
        <xs:choice>
            <xs:element name="local"  type="domain-controller-localType"/>
            <xs:element name="remote" type="domain-controller-remoteType"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="domain-controller-localType">
         <!-- FIXME this is a total ripoff of serverType to make it easy
              to initially test booting a server by having the DC act as such.
              We need a proper description of what a DC is
          -->
         <xs:all>
            <xs:element name="priority" type="priorityType" minOccurs="0"/>
            <xs:element name="cpu-affinity" type="cpu-affinityType" minOccurs="0"/>

            <xs:element name="interface-specs" type="specified-interfacesType" minOccurs="0"/>
            <xs:element name="socket-binding-group" type="socket-binding-group-refType" minOccurs="0"/>

            <xs:element name="loggers" type="loggersType" minOccurs="0"/>
            <xs:element name="system-properties" type="propertiesWithOptionalValueType" minOccurs="0"/>
            <xs:element name="jvm" minOccurs="0" type="jvmType" />
        </xs:all>
        <xs:attribute name="name" type="xs:string" use="optional" default="DomainController"/>
        <xs:attribute name="group" type="xs:string" use="required"/>

    </xs:complexType>

    <xs:complexType name="domain-controller-remoteType">
        <!--  TODO need different discovery mechanisms -->
        <xs:attribute name="location" type="xs:anyURI" use="required"/>
        <!-- the interface to bind to for outbound connections to the given location -->
        <xs:attribute name="bind-interface" type="xs:string" use="optional"/>
        <xs:attribute name="callback-location" type="xs:anyURI" use="required"/>
        <xs:attribute name="outbound-interface" type="xs:string"/>
        <xs:attribute name="callback-outbound-interface" type="xs:string"/>

    </xs:complexType>

    <xs:complexType name="jvmsType">
        <xs:sequence>
            <xs:element name="jvm" type="jvmType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="serversType">
        <xs:sequence>
            <xs:element name="server" type="serverType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="serverType">
        <xs:all>
            <xs:element name="priority" type="priorityType" minOccurs="0"/>
            <xs:element name="cpu-affinity" type="cpu-affinityType" minOccurs="0"/>

            <xs:element name="interface-specs" type="specified-interfacesType" minOccurs="0"/>
            <xs:element name="socket-binding-group" type="socket-binding-group-refType" minOccurs="0"/>

            <xs:element name="loggers" type="loggersType" minOccurs="0"/>
            <xs:element name="system-properties" type="propertiesWithOptionalValueType" minOccurs="0"/>
            <xs:element name="jvm" minOccurs="0" type="jvmType" />
        </xs:all>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="group" type="xs:string" use="required"/>
        <xs:attribute name="start" type="xs:boolean" default="true"/>
    </xs:complexType>

    <xs:complexType name="priorityType">
        <xs:attribute name="value" type="xs:nonNegativeInteger">
            <xs:annotation>
                <xs:documentation>
                    TODO
                </xs:documentation>
            </xs:annotation>            
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="cpu-affinityType">
        <xs:attribute name="cpus" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    TODO
                </xs:documentation>
            </xs:annotation>            
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="extensionsType">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:any/>
        </xs:choice>
    </xs:complexType>

</xs:schema>
