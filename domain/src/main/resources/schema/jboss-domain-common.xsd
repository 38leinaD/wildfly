<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ JBoss, Home of Professional Open Source.
  ~ Copyright 2010, Red Hat, Inc., and individual contributors
  ~ as indicated by the @author tags. See the copyright.txt file in the
  ~ distribution for a full listing of individual contributors.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    targetNamespace="urn:jboss:domain:1.0"
    xmlns="urn:jboss:domain:1.0"
    elementFormDefault="qualified"
    attributeFormDefault="unqualified"
    >

  <!-- general SSL definitions -->
  <xs:complexType name="sslType">
    <xs:annotation>
      <xs:documentation>Configuration information for one SSL configuration.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="key-alias" default="jboss"/>
    <xs:attribute name="password">
      <xs:annotation>
        <xs:documentation>Password for both trustore and keystore</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="certificate-key-file" default="${user.home}/.keystore">
      <xs:annotation>
        <xs:documentation>
          When using JSSE that could be the only file, with OpenSSL there several files
          Additionally we should have a logic to find the type of the file (PEM, PKCS12 or JKS) before using it.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="cipher-suite" default="ALL">
      <xs:annotation>
        <xs:documentation>
          comma separated list of encryption ciphers the configuration is allowed to use, that MUST NOT be
          the JVM default in of JSSE as contains weak ciphers.
          that is SSLCipherSuite when using OpenSSL (APR).
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="protocol" default="ALL" type="SSlProtocolType"/>
    <xs:attribute name="verify-client" default="none">
      <xs:annotation>
        <xs:documentation>
          that is OpenSSL SSLVerifyClient (optional,require,optionalNoCA,none) and clientAuth (true=require/false=none)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="verify-depth" default="10"/>
    <xs:attribute name="certificate-file">
      <xs:annotation>
        <xs:documentation>
          Only in the OpenSSL (JSSE keystore contains both key and certificate).
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ca-certificate-file">
      <xs:annotation>
        <xs:documentation>
          The file containing the CA certificates, truststoreFile in JSSE, note the password it same as the keystore password.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ca-revocation-url">
      <xs:annotation>
        <xs:documentation>
          A file or URL to get the revocation list. (actually: crlFile is JSSE and SSLCARevocationFile in OpenSSL)
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="session-cache-size" default="0"/>
    <xs:attribute name="session-timeout" default="86400"/>
  </xs:complexType>
  
  <xs:simpleType name="SSlProtocolType">
    <xs:restriction base="xs:token">
        <xs:enumeration value="SSLv2"/>
        <xs:enumeration value="SSLv3"/>
        <xs:enumeration value="TLSv1"/>
        <xs:enumeration value="SSLv2+SSLv3"/>
        <xs:enumeration value="ALL"/>
    </xs:restriction>
  </xs:simpleType>
  
    <!-- Common definitions -->

    <xs:complexType name="propertiesWithRequiredValueType">
        <xs:sequence>
            <xs:element name="property" type="propertyWithRequiredValueType" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="propertiesWithOptionalValueType">
        <xs:sequence>
            <xs:element name="property" type="propertyWithOptionalValueType" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="environmentVariablesType">
        <xs:sequence>
            <xs:element name="variable" type="propertyWithOptionalValueType" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="propertyWithRequiredValueType">
        <xs:attribute name="name" use="required"/>
        <xs:attribute name="value" use="required"/>
    </xs:complexType>
    <xs:complexType name="propertyWithOptionalValueType">
        <xs:attribute name="name" use="required"/>
        <xs:attribute name="value" use="optional"/>
    </xs:complexType>

   <xs:complexType name="socket-refType">
        <xs:annotation>
          <xs:documentation>A reference to a socket-binding configuration.</xs:documentation>
        </xs:annotation>
        <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>


    <xs:simpleType name="boolean">
        <xs:restriction base="xs:token">
            <xs:enumeration value="yes"/>
            <xs:enumeration value="no"/>
            <xs:enumeration value="on"/>
            <xs:enumeration value="off"/>
            <xs:enumeration value="1"/>
            <xs:enumeration value="0"/>
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
        </xs:restriction>
    </xs:simpleType>

</xs:schema>
